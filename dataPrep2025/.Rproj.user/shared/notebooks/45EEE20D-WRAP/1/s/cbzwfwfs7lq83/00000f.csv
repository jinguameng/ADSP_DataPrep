"0",""
"0","## convert column B.15 from logistic to integer"
"0","## this column was confirmed to only have NA values in the raw data"
"0","AVLTPositionScores[,""B.15""] <- as.integer(AVLTPositionScores[,""B.15""])"
"0",""
"0","## check table frequency for all variables"
"0",""
"0","## values in columns [""T1.1"" - ""D.15""] should be 1-15 (integer)"
"0","cols = c(paste0(""T1."",seq(1:15)),paste0(""T2."",seq(1:15)),paste0(""T3."",seq(1:15)),"
"0","         paste0(""T4."",seq(1:15)),paste0(""T5."",seq(1:15)),paste0(""B."",seq(1:15)),"
"0","         paste0(""SD."",seq(1:15)),paste0(""D."",seq(1:15)))"
"0",""
"0","for (col in cols) {"
"0","  vals <- unique(AVLTPositionScores[[col]])"
"0","  invalid_vals <- vals[!vals %in% c(1:15, NA)]"
"0","  "
"0","  if (length(invalid_vals) > 0) {"
"0","    cat(""Column:"", col, ""- Invalid values:"", paste(invalid_vals, collapse = "", ""), ""\n"")"
"0","  }"
"0","}"
"0",""
"0","## drop update_stamp column"
"0","AVLTPositionScores <- subset(AVLTPositionScores,select = -c(update_stamp)) ## 124 columns left"
