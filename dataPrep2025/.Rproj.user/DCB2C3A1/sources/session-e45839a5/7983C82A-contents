---
title: "Main Analysis"
output: 
  html_document:
    toc: true
    toc_float: true
    toc_collapsed: true
    toc_depth: 3
    number_sections: false
    theme: lumen
    css: "style.css"
---

```{r,echo=FALSE,message=FALSE,warning=FALSE}
require(data.table)
require(dplyr)
require(table1)
require(ggpubr)
require(lme4)
require(lmerTest)
require(ggplot2)
`%!in%` <- Negate(`%in%`)

```


# Prepare Centiloid

```{r}
## load ADSP intergrated PET dataset
ADSP_PET <- read.csv("/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/ADSP_PHC_PET_DataSet_2024.csv")
ADSP_PET <- as.data.frame(ADSP_PET) ## 16788 obs, 10932 individuals

## remove obs without PET_Amyloid_Data
ADSP_PET <- ADSP_PET[ADSP_PET$PET_Amyloid_Data == "yes",] ## 14369 obs, 10782 individuals

## remove obs with missing PHC_CENTILOIDS
ADSP_PET <- ADSP_PET[!is.na(ADSP_PET$PHC_CENTILOIDS),] ## 14220 obs, 10652 individuals

## frequency of cohorts
# table(ADSP_PET$Cohort,useNA = "ifany")
#      A4    ADNI HABS-HD    NACC    WRAP 
#    4486    4064    3046    1783     841 

## sort obs
ADSP_PET <- ADSP_PET[order(ADSP_PET$ID,ADSP_PET$PHC_Age_PET_Amyloid),]

## SILA requires the ID column to be numeric, so generate the ID key pairs
uniqueID <- unique(ADSP_PET$ID)
IDpair <- data.frame(ID = uniqueID,numeric_ID = seq(1:length(uniqueID)))

ADSP_PET <- merge(ADSP_PET,IDpair,by="ID",all.x = T)

ADSP_PET_SILA <- ADSP_PET[,c("numeric_ID","PHC_Age_PET_Amyloid","PHC_CENTILOIDS","Cohort")]

cohort_factor <- factor(ADSP_PET$Cohort)
ADSP_PET_SILA$Cohort_numeric <- as.numeric(cohort_factor)
cohort_labels <- levels(cohort_factor) ## [1] "A4"      "ADNI"    "HABS-HD" "NACC"    "WRAP"    

## save file
# write.csv(ADSP_PET_SILA,"/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/ADSP_PHC_PET_DataSet_2024_SILA_in.csv")
# write.csv(IDpair,"/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/ADSP_PHC_PET_DataSet_2024_SILA_IDpair.csv")

```

```{r}
## merge baseline and last visit data
baseline_ADSP_PET <- ADSP_PET %>% group_by(ID) %>% arrange(PHC_Age_PET_Amyloid) %>% slice(1) %>% ungroup() %>% 
  select(ID,Cohort,PHC_Age_PET_Amyloid,PHC_TRACER_Amyloid,PHC_CENTILOIDS,PHC_AMYLOID_STATUS) %>%
  rename(baseline_PHC_CENTILOIDS = PHC_CENTILOIDS,
         baseline_PHC_Age_PET_Amyloid = PHC_Age_PET_Amyloid,
         baseline_PHC_AMYLOID_STATUS = PHC_AMYLOID_STATUS) ## 10652 obs/individuals

lastVisit_ADSP_PET <- ADSP_PET %>% group_by(ID) %>% arrange(desc(PHC_Age_PET_Amyloid)) %>% slice(1) %>% ungroup() %>%
  select(ID,PHC_Age_PET_Amyloid,PHC_CENTILOIDS,PHC_AMYLOID_STATUS) %>%
  rename(lastVisit_PHC_CENTILOIDS = PHC_CENTILOIDS,
         lastVisit_PHC_Age_PET_Amyloid = PHC_Age_PET_Amyloid,
         lastVisit_PHC_AMYLOID_STATUS = PHC_AMYLOID_STATUS) ## 10652 obs/individuals

BL_LV_ADSP_PET <- merge(baseline_ADSP_PET,lastVisit_ADSP_PET,by="ID")

BL_LV_ADSP_PET$BL_LV_interval_month <- (BL_LV_ADSP_PET$lastVisit_PHC_Age_PET_Amyloid-
                                          BL_LV_ADSP_PET$baseline_PHC_Age_PET_Amyloid)*12

BL_LV_ADSP_PET$ConversionStatus[BL_LV_ADSP_PET$baseline_PHC_AMYLOID_STATUS == 0 & 
                                  BL_LV_ADSP_PET$lastVisit_PHC_AMYLOID_STATUS ==1] <- "Conversion"

BL_LV_ADSP_PET$ConversionStatus[BL_LV_ADSP_PET$baseline_PHC_AMYLOID_STATUS == 1 & 
                                  BL_LV_ADSP_PET$lastVisit_PHC_AMYLOID_STATUS ==0] <- "Reversion"

BL_LV_ADSP_PET$ConversionStatus[BL_LV_ADSP_PET$baseline_PHC_AMYLOID_STATUS == 0 & 
                                  BL_LV_ADSP_PET$lastVisit_PHC_AMYLOID_STATUS ==0] <- "Unchanged"

BL_LV_ADSP_PET$ConversionStatus[BL_LV_ADSP_PET$baseline_PHC_AMYLOID_STATUS == 1 & 
                                  BL_LV_ADSP_PET$lastVisit_PHC_AMYLOID_STATUS ==1] <- "Unchanged"

```

```{r}
table(BL_LV_ADSP_PET$ConversionStatus)
```
<br>
<br>

# Run SILA

```
## MATLAB CODE
## File: /Users/mengnazhang/Desktop/EAOA_BA_local/CODE/ADSP.m

%% add the folder with SILA function files to the MATLAB path
addpath('/Users/mengnazhang/Desktop/EAOA_BA_local/CODE/SILA-AD-Biomarker')

%% verify that the SILA function is accessible
disp('SILA function location:');
which SILA

%% load centiloid data
dat = readtable("/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/ADSP_PHC_PET_DataSet_2024_SILA_in.csv");
head(dat)

%% run SILA main function, this will produce the time vs value (interval from amyloid onset) curve
centiloid_threshold = 25;

[tsila,tdrs] = SILA(dat.PHC_Age_PET_Amyloid, dat.PHC_CENTILOIDS, dat.numeric_ID, 0.25, centiloid_threshold, 200);

%% get EAOA (estimated amyloid onset age)
estimate = SILA_estimate(tsila, dat.PHC_Age_PET_Amyloid, dat.PHC_CENTILOIDS, dat.numeric_ID);
% estimate = SILA_estimate(tsila, dat.PHC_Age_PET_Amyloid, dat.PHC_CENTILOIDS, dat.numeric_ID,truncate_aget0='no');

%% value vs. time for all subjects
addpath('/Users/mengnazhang/Desktop/EAOA_BA_local/CODE/SILA-AD-Biomarker/demo')

figure('Units','centimeters','Position',[2,2,12,8])
hold on

% Plot spaghetti lines with group colors and legend
spaghetti_plot_byCohort(estimate.estdtt0, estimate.val, estimate.subid, dat.Cohort);

% Overlay group average line
plot(tsila.adtime, tsila.val, '-k', 'LineWidth', 2, 'DisplayName', 'Group Avg');

% Threshold line
plot(xlim, 21*[1,1], '--k', 'DisplayName', 'Threshold');

% Axis and labels
title('Data Aligned by Estimated Time to Threshold');
xlabel('Estimated time to threshold (years)');
ylabel('Value');

% Finalize legend
legend('show', 'Location', 'best');

%% Save the results file
writetable(estimate, '/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/MATLAB_output/estimate.csv')
writetable(tdrs, '/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/MATLAB_output/tdrs.csv')
writetable(tsila, '/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/MATLAB_output/tsila.csv')

```

<br>
```
## MATLAB CODE
## File: /Users/mengnazhang/Desktop/EAOA_BA_local/CODE/SILA-AD-Biomarker/demo/spaghetti_plot_byCohort.m

function spaghetti_plot_byCohort(age, val, subid, groupname)
% spaghetti_plot_byCohort generates a group-colored spaghetti plot.
%   Inputs:
%       age, val, subid: numeric vectors (equal length)
%       groupname: cell or string array (cohort/group names)

if isstring(groupname)
    groupname = cellstr(groupname);  % Convert string to cell
end

% Combine into a table and sort
tin = table(age, val, subid, groupname, ...
            'VariableNames', {'age', 'val', 'subid', 'groupname'});
tin = sortrows(tin, {'subid', 'age'});

% Identify unique group names
[group_labels, ~, group_idx] = unique(tin.groupname);
ngroups = numel(group_labels);
colors = lines(ngroups);  % or replace with colormap of your choice

% Plot each subject line with correct group color, hidden from legend
hold on
subs = unique(tin.subid);
for i = 1:numel(subs)
    ts = tin(tin.subid == subs(i), :);
    gname = ts.groupname{1};
    gcode = find(strcmp(group_labels, gname));
    plot(ts.age, ts.val, '.-', ...
        'Color', colors(gcode, :), ...
        'HandleVisibility', 'off');  % prevents legend clutter
end

% Add one dummy line per group for legend
for i = 1:ngroups
    plot(nan, nan, '-', ...
        'Color', colors(i,:), ...
        'DisplayName', group_labels{i});
end

legend('show');

```

<br>
<br>

# Merge Centiloid with Imgaing Data

## Load SILA
```{r}
## load SILA estimate
sila <- read.csv("/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/MATLAB_output/estimate.csv") %>% ## 14220 obs,
  as.data.frame() %>%
  group_by(subid) %>%
  filter(dtageref == 0) %>% ## extract the reference observation
  select(c(subid,estaget0)) %>%
  rename(EAOA=estaget0,
         numeric_ID=subid) %>%
  ungroup() ## 10652 obs/individuals

## load ID pairs
dat <- merge(sila,IDpair,by="numeric_ID")

## remove individual with negative EAOA
dat <- dat[dat$EAOA > 0,] ## 10652 obs
names(dat)[names(dat)=="ID"] = "Study_Phenotype_ID"

```


## Load SPARE-BA
```{r}
## get SPARE-BA and SPARE-AD and some covariates
allDomains <- readRDS("/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/ADSP_PHC_AllDomains-LimitedDiffusion_DataSet_2024_updated.rds") %>%
  select(c(Cohort,ID,PHC_Age_T1_MUSE,Sex,Race,Ethnicity,Education,Diagnosis,SPARE_AD,SPARE_BA,PHC_WMHVOL_Harmonized)) %>%
  filter(!is.na(SPARE_BA)) %>% ## the SPARE-BA in A4 are all missing
  rename(Study_Phenotype_ID = ID) ## 30,969 obs

## get covariate-build status
covbuild <- readRDS("/Users/mengnazhang/Desktop/SPARE_AD_local/Data/Raw/pheno/Covariate_Build_Feb2025.rds") %>%
  select(c(Study_Phenotype_ID,FID,IID,Age,apoe2count,apoe2pos,apoe3count,apoe3pos,apoe4count,apoe4pos,Diagnosis)) %>%
  rename(Diagnosis_covbuild = Diagnosis) ## 504,402 obs

## impute Diagnosis
covDiagnosis <- covbuild[,c("Study_Phenotype_ID","Age","Diagnosis_covbuild")]

## remove obs from if missing in Diagnosis column
covDiagnosis2 <- covDiagnosis[!is.na(covDiagnosis$Diagnosis_covbuild),] ## 388,400 obs

## check individuals with imaging data but missing from covariate build file
tmp <- allDomains[allDomains$Study_Phenotype_ID %!in% covDiagnosis2$Study_Phenotype_ID,] ## 511 obs,462 individuals

## merge allDomains with Diagnosis
df <- merge(allDomains,covDiagnosis2,by = "Study_Phenotype_ID",all.x = T) ## 185,220 obs

df2 <- df %>%
  mutate(Age_Difference = abs(PHC_Age_T1_MUSE - Age)) %>%
  group_by(Study_Phenotype_ID, PHC_Age_T1_MUSE) %>% ## group that we want to have the smallest age diff for each individual
  arrange(PHC_Age_T1_MUSE) %>% ## sort by Age in case if Age_Difference are the same across multiple visits
  slice_min(Age_Difference, n = 1, with_ties = F) %>%  ## take the smallest Age_Difference
  ungroup() ## 30,963 obs

## filling cases with missing in Diagnosis with Diagnosis_covbuild values
df3 <- df2 %>% mutate(Diagnosis = if_else(is.na(Diagnosis) & Age_Difference <= 1, Diagnosis_covbuild, Diagnosis))

## drop irrelevant columns
df4 <- subset(df3, select = -c(Diagnosis_covbuild,Age_Difference))

## add other columns from covariates-build
covbuild <- covbuild %>% 
  select(c(Study_Phenotype_ID,FID,IID,apoe2count,apoe2pos,apoe3count,apoe3pos,apoe4count,apoe4pos)) %>%
  distinct() ## 109,578 obs/individuals

df5 <- merge(df4,covbuild,by="Study_Phenotype_ID",all.x = T) ## 30,963 obs

```


## Merge Data

```{r}
## check number of individuals with SILA estimates not present in SPARE-BA data
# nrow(dat[dat$Study_FID_IID %!in% df5$Study_FID_IID,]) ## 2975 / 3884 individuals missing SPARE-BA data

all <- merge(df5,dat,by="Study_Phenotype_ID",all.x = T) ## merge SILA estimates with imaging data, 12514 obs

all <- all[!is.na(all$EAOA),] ## 13678 obs, 5047 individuals, 

## recode variables
all$Sex <- factor(all$Sex, levels = c(1,2),labels = c("Male","Female"))
all$Diagnosis <- factor(all$Diagnosis, levels = c(1,2,3), labels = c("CN","MCI","AD"))
all$apoe2pos <- factor(all$apoe2pos, levels = c(0,1), labels = c("Non-Carrier","Carrier"))
all$apoe3pos <- factor(all$apoe3pos, levels = c(0,1), labels = c("Non-Carrier","Carrier"))
all$apoe4pos <- factor(all$apoe4pos, levels = c(0,1), labels = c("Non-Carrier","Carrier"))

## final dataset
final_baseline <- all %>% group_by(Study_Phenotype_ID) %>% arrange(PHC_Age_T1_MUSE) %>% slice(1) %>% ungroup() ## 5047 obs/individuals
final_lastVisit <- all %>% group_by(Study_Phenotype_ID) %>% arrange(desc(PHC_Age_T1_MUSE)) %>% slice(1) %>% ungroup() 

tmp <- all %>% arrange(Study_Phenotype_ID,PHC_Age_T1_MUSE) ## 13678 obs

tmp2 <- tmp %>%
  group_by(Study_Phenotype_ID) %>%
  summarise(n_obs = n()) %>%
  filter(n_obs >= 2) %>%
  ungroup() ## keep people with at least 2 obs, 2824 individuals

final_longitudinal <- all[all$Study_Phenotype_ID %in% tmp2$Study_Phenotype_ID,] ## 11455 obs, 2824 individuals

## generate time interval for longitudinal analysis
final_longitudinal <- final_longitudinal %>%
  arrange(Study_Phenotype_ID, PHC_Age_T1_MUSE) %>%
  group_by(Study_Phenotype_ID) %>%
  mutate(
    baseline_age = first(PHC_Age_T1_MUSE),
    visit_number = row_number() - 1, 
    interval_years = PHC_Age_T1_MUSE - baseline_age,
    interval_months = interval_years * 12) %>% 
  ungroup()

## clean space
rm(list = setdiff(ls(), c("%!in%","final_baseline","final_lastVisit","final_longitudinal")))
gc()
```

<br>
<br>

# Table-1

## Baseline
```{r}
table1(~ EAOA + SPARE_BA + SPARE_AD + PHC_Age_T1_MUSE + Sex + Diagnosis + Education + apoe2pos + apoe4pos | Cohort, data=final_baseline)
```

<br>

## Last Visit
```{r}
table1(~ EAOA + SPARE_BA + SPARE_AD + PHC_Age_T1_MUSE + Sex + Diagnosis + Education + apoe2pos + apoe4pos | Cohort, data=final_lastVisit)
```

<br>
<br>

# Correlation

## Baseline
```{r}
source("functionScripts.R")
final_baseline$chronicity <- final_baseline$PHC_Age_T1_MUSE - final_baseline$EAOA ## the higher, the worse, longer chronicity
final_baseline$BAdelta <- final_baseline$SPARE_BA - final_baseline$PHC_Age_T1_MUSE ## more posotive, the worse, accelerated aging
scatter_plot(final_baseline,"chronicity","BAdelta")
```

```{r}
## remove individuals with chronicity < -25
sub_baseline <- subset(final_baseline,chronicity > -25) ## 2579 individuals
scatter_plot(sub_baseline,"chronicity","BAdelta")
```

```{r}
## remove individuals with chronicity < -10
sub_baseline <- subset(final_baseline,chronicity > -10) ## 2161 individuals
scatter_plot(sub_baseline,"chronicity","BAdelta")
```

<br>

## Last Visit

```{r}
final_lastVisit$chronicity <- final_lastVisit$PHC_Age_T1_MUSE - final_lastVisit$EAOA ## the higher, the worse, longer chronicity
final_lastVisit$BAdelta <- final_lastVisit$SPARE_BA - final_lastVisit$PHC_Age_T1_MUSE ## more posotive, the worse, accelerated aging
scatter_plot(final_lastVisit,"chronicity","BAdelta")
```
```{r}
## remove individuals with chronicity < -25
sub_lastVisit <- subset(final_lastVisit,chronicity > -25) ## 2657 individuals
scatter_plot(sub_lastVisit,"chronicity","BAdelta")
```

```{r}
## remove individuals with chronicity < -10
sub_lastVisit <- subset(final_lastVisit,chronicity > -10) ## 2298 individuals
scatter_plot(sub_lastVisit,"chronicity","BAdelta")
```
```{r}
## remove individuals with chronicity < 0
sub_lastVisit <- subset(final_lastVisit,chronicity > 0) ## 1601 individuals
scatter_plot(sub_lastVisit,"chronicity","BAdelta")
```
<br>
<br>

# Longitudinal Analysis

## SPARE-BA Model

### Time x EAOA
```{r}
mod <- lmer(SPARE_BA ~ + EAOA + baseline_age + Sex + Education + apoe4pos + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = final_longitudinal,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

summary(mod)
```

```{r}
# Define a grid of EAOA values and time intervals
EAOA_values <- seq(40, 80, 5)  # or use seq(45, 75, 5) for more detail
time_values <- seq(0, 30, 1)

# Create a new data frame for prediction
newdata <- expand.grid(
  EAOA = EAOA_values,
  interval_years = time_values,
  baseline_age = 65,          # hold constant
  Sex = "Female",             # hold constant
  Education = 16,             # hold constant
  apoe4pos = "Carrier",       # hold constant
  Study_Phenotype_ID = NA     # random effect group not needed for fixed-effect plot
)

# Predict using fixed effects only
newdata$SPARE_BA <- predict(mod, newdata, re.form = NA)

ggplot(newdata, aes(x = interval_years, y = SPARE_BA, color = factor(EAOA))) +
  geom_line(linewidth = 1.2) +
  labs(title = "Predicted SPARE-BA Over Time by EAOA",
       x = "Years Since Baseline",
       y = "Predicted SPARE-BA",
       color = "EAOA") +
  theme_minimal()


```


### Time x APOE4
```{r}
mod <- lmer(SPARE_BA ~ + EAOA + baseline_age + Sex + Education + apoe4pos + interval_years * apoe4pos +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = final_longitudinal,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

summary(mod)
```


### Time x APOE4 x EAOA
```{r}
mod <- lmer(SPARE_BA ~ + EAOA + baseline_age + Sex + Education + apoe4pos + interval_years * apoe4pos * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = final_longitudinal,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

summary(mod)
```

<br>
<br>

### Stratify by AOE4 Status
```{r}
e4carrier <- final_longitudinal[final_longitudinal$apoe4pos == "Carrier",] ## 5524 obs
e4nonCarrier <- final_longitudinal[final_longitudinal$apoe4pos == "Non-Carrier",] ## 8593 obs

mod_carrier <- lmer(SPARE_BA ~ + EAOA + baseline_age + Sex + Education  + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = e4carrier,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

mod_non_carrier <- lmer(SPARE_BA ~ + EAOA + baseline_age + Sex + Education + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = e4nonCarrier,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))
```

```{r}
summary(mod_carrier)
```

```{r}
summary(mod_non_carrier)
```

<br>
<br>

### Stratify by Sex
```{r}
female <- final_longitudinal[final_longitudinal$Sex == "Female",] ## 7265 obs
male <- final_longitudinal[final_longitudinal$Sex == "Male",] ## 6413 obs

mod_female <- lmer(SPARE_BA ~ + EAOA + baseline_age + apoe4pos + Education  + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = female,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

mod_male <- lmer(SPARE_BA ~ + EAOA + baseline_age + apoe4pos + Education + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = male,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))
```

```{r}
summary(mod_female)
```

```{r}
summary(mod_male)
```


## SPARE-AD Model

### Time x EAOA
```{r}
mod <- lmer(SPARE_AD ~ + EAOA + baseline_age + Sex + Education + apoe4pos + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = final_longitudinal,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

summary(mod)
```

### Time x APOE4
```{r}
mod <- lmer(SPARE_AD ~ + EAOA + baseline_age + Sex + Education + apoe4pos + interval_years * apoe4pos +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = final_longitudinal,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

summary(mod)
```

### Time x APOE4 x EAOA
```{r}
mod <- lmer(SPARE_AD ~ + EAOA + baseline_age + Sex + Education + apoe4pos + interval_years * apoe4pos * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = final_longitudinal,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

summary(mod)
```

<br>
<br>

### Stratify by AOE4 Status
```{r}
e4carrier <- final_longitudinal[final_longitudinal$apoe4pos == "Carrier",] ## 5524 obs
e4nonCarrier <- final_longitudinal[final_longitudinal$apoe4pos == "Non-Carrier",] ## 8593 obs

mod_carrier <- lmer(SPARE_AD ~ + EAOA + baseline_age + Sex + Education  + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = e4carrier,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

mod_non_carrier <- lmer(SPARE_AD ~ + EAOA + baseline_age + Sex + Education + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = e4nonCarrier,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))
```

```{r}
summary(mod_carrier)
```

```{r}
summary(mod_non_carrier)
```

<br>
<br>

### Stratify by Sex
```{r}
female <- final_longitudinal[final_longitudinal$Sex == "Female",] ## 7265 obs
male <- final_longitudinal[final_longitudinal$Sex == "Male",] ## 6413 obs

mod_female <- lmer(SPARE_AD ~ + EAOA + baseline_age + apoe4pos + Education  + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = female,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))

mod_male <- lmer(SPARE_AD ~ + EAOA + baseline_age + apoe4pos + Education + interval_years * EAOA +
                (1|Study_Phenotype_ID) + (0+interval_years|Study_Phenotype_ID), 
                data = male,
                control = lmerControl(optimizer = "bobyqa",optCtrl = list(maxfun = 100000)))
```

```{r}
summary(mod_female)
```

```{r}
summary(mod_male)
```

<br>
<br>


# Brain Chart

## SPARE-BA/AD Correlation with Age

```{r, warning=FALSE, message=FALSE, echo=FALSE}
ggplot(final_baseline, aes(x = Age, y = SPARE_BA)) +
  geom_point(alpha = 0.7, size = 1, color = "lightgreen") + 
  geom_smooth(method = "lm", se = FALSE, linetype = "dashed", color = "red") +
  # facet_wrap(~study) +  # Separate plot for each cohort
  stat_cor(method = "spearman", label.x.npc = "left", label.y.npc = "top", size = 5) +  # Add Spearman correlation
  labs(title = "Correlation between SPARE_BA and Age in all cohorts",
       x = "Chronological Age",
       y = "SPARE-AD") +
  theme_minimal()

```

```{r, warning=FALSE, message=FALSE, echo=FALSE}
ggplot(final_baseline, aes(x = Age, y = SPARE_AD)) +
  geom_point(alpha = 0.7, size = 1, color = "lightgreen") + 
  geom_smooth(method = "lm", se = FALSE, linetype = "dashed", color = "red") +
  # facet_wrap(~study) +  # Separate plot for each cohort
  stat_cor(method = "spearman", label.x.npc = "left", label.y.npc = "top", size = 5) +  # Add Spearman correlation
  labs(title = "Correlation between SPARE_AD and Age in all cohorts",
       x = "Chronological Age",
       y = "SPARE-AD") +
  theme_minimal()
```
<br>
<br>

## Data Prep

```{r, eval=FALSE}
## prepare data for RShiny app: https://rpomponio.shinyapps.io/brain_aging_charts/

brainChart_baseline <- final_baseline[,c("Cohort","Age","Sex","Education","SPARE_AD","SPARE_BA","EAOA")]
brainChart_lastVisit <- final_lastVisit[,c("Cohort","Age","Sex","Education","SPARE_AD","SPARE_BA","EAOA")]

# write.csv(brainChart_baseline,"/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/brainChart/brainChart_input_baseline.csv",row.names = F,quote = F)
# 
# write.csv(brainChart_lastVisit,"/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/brainChart/brainChart_input_lastVisit.csv",row.names = F,quote = F)

brainChart_baseline$Chronicity = brainChart_baseline$Age - brainChart_baseline$EAOA

mod <- lm(SPARE_BA~SPARE_AD,data = brainChart_baseline)
brainChart_baseline$BA_residual <- mod$residuals

brainChart_baseline <- brainChart_baseline[brainChart_baseline$Chronicity > 0,]

write.csv(brainChart_baseline,"/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/brainChart/brainChart_input_baseline_chronicityGT0.csv",row.names = F,quote = F)


brainChart_lastVisit$Chronicity = brainChart_lastVisit$Age - brainChart_lastVisit$EAOA

mod <- lm(SPARE_BA~SPARE_AD,data = brainChart_lastVisit)
brainChart_lastVisit$BA_residual <- mod$residuals

brainChart_lastVisit <- brainChart_lastVisit[brainChart_lastVisit$Chronicity > 0,]
write.csv(brainChart_lastVisit,"/Users/mengnazhang/Desktop/EAOA_BA_local/DATA/brainChart/brainChart_input_lastVisit_chronicityGT0.csv",row.names = F,quote = F)

```

<br>
<br>

## Baselie

Plots are based on file brainChart_input_baseline_chronicityGT0.csv

Covariates: Sex, Education

![Age-EAOA-SPARE_BA](plots/brainChart_Age_EAOA_SPAREBA_baseline.png)\

![Age-EAOA-SPARE_AD](plots/brainChart_Age_EAOA_SPAREAD_baseline.png)\

<br>
<br>

## Last Visit

Plots are based on file brainChart_input_lastVisit_chronicityGT0.csv

Covariates: Sex, Education

![Age-EAOA-SPARE_BA](plots/brainChart_Age_EAOA_SPAREBA_lastVisit.png)\

![Age-EAOA-SPARE_AD](plots/brainChart_Age_EAOA_SPAREAD_lastVisit.png)\

<br>
<br>

# Correlation:Non-AD-Pathology Brain Age with EAOA

## Baseline

```{r}
mod <- lm(SPARE_BA ~ SPARE_AD, data = final_baseline)

final_baseline$BA_resid <- mod$residuals

scatter_plot(final_baseline,"BA_resid","EAOA")
```

## Last Visit

```{r}
mod <- lm(SPARE_BA ~ SPARE_AD, data = final_lastVisit)

final_lastVisit$BA_resid <- mod$residuals

scatter_plot(final_lastVisit,"BA_resid","EAOA")
```


